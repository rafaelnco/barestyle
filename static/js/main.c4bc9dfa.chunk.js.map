{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.svg"],"names":["values","defaults","variations","generator","nominators","paramCase","camelCase","types","unit","animate","pressed","hovered","animating","soft-scale","twoAHalf-skew","smooth-scale","one-apex","lightest-filled-shadow","lightest-link-shadow","useAnimate","props","value","useState","state","setState","pressIn","pressOut","hoverIn","hoverOut","useReaction","useMouse","setPressed","onMouseEnter","onMouseDown","onMouseUp","onMouseLeave","consumer","hook","hooks","mouse","rules","use","variants","transformers","type","parameters","transformation","console","log","assembled","assemble","Bare","Tag","applyVariants","Square","three-width","three-height","Button","$","use-mouse","lightest-round","lightest-margin","Primary","double-grow","one-link-border-bottom","one-alert-border-left","Image","Text","Section","flex","constraints","dimension","pallete","background","samples","generate","Object","keys","track","index","length","Boolean","window","location","hostname","match","ReactDOM","render","vertical","justify-start","five-height","src","logo","full-height","primary-foreground","heavy-text","wrap","horizontal","justify-center","flow-vertical","map","_","key","String","fromCharCode","slice","samplesTrack","sample","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c4bc9dfa.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport logo from './logo.svg'\n\nimport './App.css';\n\nimport { $, defaults, generator, generate, applyVariants, assemble } from 'barestyle'\n\nimport { paramCase, camelCase } from 'barestyle/utils'\n\nconst { values } = defaults\n\nconst variations = generator({\n  nominators: [ paramCase, camelCase ],\n  types: { unit: unit => `${ 2 * unit }rem` }\n})\n\nconst animate = ({ pressed, hovered, animating }) => <$\n  soft-scale={pressed}\n  twoAHalf-skew={animating}\n  smooth-scale={hovered}\n  one-apex={hovered||pressed}\n  lightest-filled-shadow={!pressed}\n  lightest-link-shadow={pressed}\n/>\n\nfunction useAnimate() {\n  const { state, props } = useReaction()\n  return { ...animate(state).props, ...props }\n}\n\nfunction useReaction(props, value) {\n  const [ state, setState ] = useState({})\n  const { pressed, hovered, animating } = state;\n  return {\n    state,\n    props: {\n      pressIn: () => setState({ animating, pressed: true }),\n      pressOut: () => setState({ animating: !animating, hovered }),\n      hoverIn: () => setState({ animating: !animating, hovered: true }),\n      hoverOut: () => setState({ animating: !animating }),\n    },\n  }\n}\n\nfunction useMouse({ hoverIn, hoverOut, pressIn, pressOut }) {\n  const [pressed, setPressed] = useState(false)\n  return {\n    onMouseEnter: () => {\n      if(hoverIn) hoverIn()\n    },\n    onMouseDown: () => {\n      if(pressIn) pressIn()\n      setPressed(true)\n    },\n    onMouseUp: () => {\n      if(pressed && pressOut) pressOut()\n      setPressed(false)\n    },\n    onMouseLeave: () => {\n      if(pressed) setPressed(false)\n      if(hoverOut) hoverOut()\n    },\n  }\n}\n\nuseMouse.consumer = [ 'hoverIn', 'hoverOut', 'pressIn', 'pressOut' ]\n\nconst hook = hook => ({ hook })\n\nconst hooks = generator({\n  types: { hook },\n  values: {\n    hooks: {\n      mouse: hook(useMouse),\n      animate: hook(useAnimate)\n    }\n  },\n  rules: {\n    hooks: { use: [ \"action\" ] }\n  },\n  variants: ({ rules, values }) => ({\n    hooks: [ rules.hooks, values.hooks ]\n  }),\n  transformers: ({ }) => [\n    {\n      type: 'properties',\n      parameters: [ \"hook\" ],\n      transformation: ({ hook }) => ({ hook })\n    }\n  ]\n})\n\nconsole.log(hooks, variations)\n\nconst assembled = assemble(variations, hooks)\n\nconst Bare = ({ Tag = 'div', ...props }) => <Tag {...applyVariants(assembled, props)} />\n\nconst Square = props => <Bare three-width three-height {...props} />\n\nconst Button = $ => <Square use-mouse lightest-round lightest-margin {...useAnimate()} {...$} />\n\nButton.Primary = $ => <Button double-grow one-link-border-bottom one-alert-border-left {...$} />\n\nconst Image = props => <Bare Tag=\"img\" {...props} />\n\nconst Text = props => <Bare Tag=\"p\" {...props} />\n\nconst Section = props => <Bare flex {...props} />\n\nconst background = { background: [ \"backgroundColor\" ] }\n\nconst constraints = [ values.dimension, values.pallete, background ]\n\nconst samples = generate({ constraints })\n\nconst pallete = Object.keys(values.pallete)\n\nconst track = index => pallete.length * index\n\nconst samplesTrack = index => Object.keys(samples).slice(track(index), track(index + 1))\n\nexport default () => {\n  return <Section vertical>\n    <Section lightest-filled-shadow justify-start>\n      <Section five-height>\n        <Image src={logo} full-height/>\n      </Section>\n      <Section>\n        <Text primary-foreground heavy-text>Bare Style</Text>\n      </Section>\n    </Section>\n    <Section wrap horizontal justify-center flow-vertical>\n      {\n        pallete.map((_, index) => (\n          <Section key={String.fromCharCode(65 + index)}>\n            {samplesTrack(index).map(sample => (\n              <Button.Primary key={sample} {...{ [sample]: true }} />\n            ))}\n          </Section>\n        ))\n      }\n    </Section>\n  </Section>\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.881e786c.svg\";"],"sourceRoot":""}